{
  "IpRateLimitPolicies": { //Bunu özel olarak belirli Ip için yetki vermek için kullanýrýz program.js te bazý tanýmlamalar yapýlmasý gerekiyor oraya bak
    "IpRules": [
      {
        "Ip": "::1", //local adresimiz ama biz buraya özel ipler yazabiliriz
        "Rules": [
          {
            "Endpoint": "*", //Tüm endpointler   
            "Period": "30s", //bu taraf baskýn olmasýna raðmen aþaðýda  süre daha darsa aþaðýdaki kuralýn tamamýný alýr dahil olduðu endpoint için ama süreler ayný limitler farklýysa burayý öncelik alýr
            "Limit": 30
          }
        ]
      }
    ]

  },
  "ClientRateLimitPolicies": { //Bunu özel olarak belirli Clientler için yetki vermek için kullanýrýz program.js te bazý tanýmlamalar yapýlmasý gerekiyor oraya bak
    "ClientRules": [
      {
        "ClientId": "client-id-1", //özel client key ve value
        "Rules": [
          {
            "Endpoint": "*", //Tüm endpointler   
            "Period": "30s", //bu taraf baskýn olmasýna raðmen aþaðýda  süre daha darsa aþaðýdaki kuralýn tamamýný alýr dahil olduðu endpoint için ama süreler ayný limitler farklýysa burayý öncelik alýr
            "Limit": 30
          }
        ]
      },
      {
        "Client": "client-id-2", //özel client key ve value
        "Rules": [
          {
            "Endpoint": "*", //Tüm endpointler   
            "Period": "30s", //bu taraf baskýn olmasýna raðmen aþaðýda  süre daha darsa aþaðýdaki kuralýn tamamýný alýr dahil olduðu endpoint için ama süreler ayný limitler farklýysa burayý öncelik alýr
            "Limit": 30
          }
        ]
      }
    ]

  },
  "IpRateLimiting": { // bunlarý ezberlemeye gerek yok google->Ip rate limit appsetting yazmak yeterli
    "QuotaExceededResponse": { //istek limiti aþýldýðýnda gösterilecek mesajý \" ile biz belirtiriz

      "Content": "{{ \"mesaj\":\" Istek limiti aþýldý. \",\"Detay\": \" Izin verilen istek sayýsý {1}'de {0} istektir. {2} saniye sonra tekrar deneyiniz \"}}", //{1}:Period  {0}:limit. {2}:tekrar denenme süresi saniye cinsinden // mesajý json tipinde döndük
      "ContentType": "application/json"
    },
    "EnableEndpointRateLimiting": true, //endpointlere tek tek limit belirlemek için true yapýlýr yoksa hepsine1 ttane verebiliriz false ise
    //"RealIpHeader": "x-ip",//load balancer kullanýlýyorsa header kýsmýna bilgiyi burdan veririz. Load balancer deðerine göre deðer atarýz
    "StackBlockedRequests": false, //sýnýr belirlediðimiz  limiti aþarsa  örnsayýlsýn mý sayýlmasýn mý örn dk da 60 istek limiti varsa dk 100 yapýlan isteðin 40 tanesi baþarýzý olup sayýlmayacak
    "HttpStatusCode": 429, //Baþarýsýz olursa http durum kodu 429 belirleriz Çok fazla istek yaptýnýz anlamýna gelir.
    "IpWhitelist": [ "127.0.0.1", "::1" ], // ilki ipv4  ikincisi ipv6 localde çalýþýrken örn bu ikisini vermemiz gerekiyor. Bir ',' daha ekleyip ipler yaabiliriz. Buradakiler kýsýtlanmaz
    "EndpointWhitelist": [ "*:/api/customers" ], //sýnýrsýz istek yapýlacak endpoint
    "GeneralRules": [
      {
        "Endpoint": "*:/api/products", //Tüm products endpointler
        "Period": "20s", // 1s 1m 1h 1d burada ingilizce 5 saniyede
        "Limit": 3 //istek limiti
      },
      { //buun gibi endpointlere özel tanýmlar yapabiliri
        "Endpoint": "*:/api/products", //* get,put,post methodlarýnýn hepsini kapsamakta yoksa GET:/api/products dersek sadece GET için alýr POST,PUT,DELETE de ayný þekilde
        "Period": "1h",
        "Limit": 100
      }, //category 20 saniyede 3 1 saatte 100 istek yapabilir
      { //buun gibi endpointlere özel tanýmlar yapabiliri
        "Endpoint": "*:/api/categories", //* get,put,post methodlarýnýn hepsini kapsamakta api/categories/* dersek te get post put delete gibi metodlarýn dýþýndakileri de alýrýz
        "Period": "30s",
        "Limit": 5
      },
      { //buun gibi endpointlere özel tanýmlar yapabiliri
        "Endpoint": "*:/api/categories", //* get,put,post methodlarýnýn hepsini kapsamakta
        "Period": "1d",
        "Limit": 500
      } //category 30 saniyede 5 1 günde 500 istek yapabilir
    ]
  },
  "ClientRateLimiting": { // bunlarý ezberlemeye gerek yok google->Ip rate limit appsetting yazmak yeterli
    "QuotaExceededResponse": { //istek limiti aþýldýðýnda gösterilecek mesajý \" ile biz belirtiriz

      "Content": "{{ \"mesaj\":\" Istek limiti aþýldý. \",\"Detay\": \" Izin verilen istek sayýsý {1}'de {0} istektir. {2} saniye sonra tekrar deneyiniz \"}}", //{1}:Period  {0}:limit. {2}:tekrar denenme süresi saniye cinsinden // mesajý json tipinde döndük
      "ContentType": "application/json"
    },
    "EnableEndpointRateLimiting": true, //endpointlere tek tek limit belirlemek için true yapýlýr yoksa hepsine1 ttane verebiliriz false ise
    //"RealIpHeader": "x-ip",//load balancer kullanýlýyorsa header kýsmýna bilgiyi burdan veririz. Load balancer deðerine göre deðer atarýz
    "StackBlockedRequests": false, //sýnýr belirlediðimiz  limiti aþarsa  örnsayýlsýn mý sayýlmasýn mý örn dk da 60 istek limiti varsa dk 100 yapýlan isteðin 40 tanesi baþarýzý olup sayýlmayacak
    "HttpStatusCode": 429, //Baþarýsýz olursa http durum kodu 429 belirleriz Çok fazla istek yaptýnýz anlamýna gelir.
    "ClientIdHeader": "X-ClientId", //key
    "ClientWhitelist": [ "client-1","client-2" ], // values // Ipden farký burasý client-1,client-2 adlý istemiciye göre kural belirleriz. Ýsteðin header kýsmýnda client-1 key-value çifti varsa bu kurallar uygulanýr
    "EndpointWhitelist": [ "*:/api/customers" ], //sýnýrsýz istek yapýlacak endpoint
    "GeneralRules": [
      {
        "Endpoint": "*:/api/products", //Tüm products endpointler
        "Period": "20s", // 1s 1m 1h 1d burada ingilizce 5 saniyede
        "Limit": 3 //istek limiti
      },
      { //buun gibi endpointlere özel tanýmlar yapabiliri
        "Endpoint": "*:/api/products", //* get,put,post methodlarýnýn hepsini kapsamakta yoksa GET:/api/products dersek sadece GET için alýr POST,PUT,DELETE de ayný þekilde
        "Period": "1h",
        "Limit": 100
      }, //category 20 saniyede 3 1 saatte 100 istek yapabilir
      { //buun gibi endpointlere özel tanýmlar yapabiliri
        "Endpoint": "*:/api/categories", //* get,put,post methodlarýnýn hepsini kapsamakta api/categories/* dersek te get post put delete gibi metodlarýn dýþýndakileri de alýrýz
        "Period": "30s",
        "Limit": 5
      },
      { //buun gibi endpointlere özel tanýmlar yapabiliri
        "Endpoint": "*:/api/categories", //* get,put,post methodlarýnýn hepsini kapsamakta
        "Period": "1d",
        "Limit": 500
      } //category 30 saniyede 5 1 günde 500 istek yapabilir
    ]
  },

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}
